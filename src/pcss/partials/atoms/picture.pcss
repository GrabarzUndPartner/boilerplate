$screenNames: lg, md, sm, xs, default;
$screenSizes: 1200, 992, 768, 480;
$test: default;

body {
  &::after {
    display: none !important;
  }
}

picture[data-partial="atoms/picture"] {
  position: relative;
  display: block;

  > template {
    display: none;
  }

  > source {
    position: relative;
    display: none;
  }

  > img {
    display: block;
    width: 100%;
    margin: auto;

    &.js-hidden {
      position: relative;
      visibility: hidden;
    }

    .mejs-container + &,
    video + & {
      .js-modal-active .partial[data-partial*="layouts/modal"] & {
        position: fixed;
        top: 50%;
        left: 50%;
        width: auto !important;
        min-width: 100%;
        height: auto !important;
        min-height: 100%;
        transform: translate(-50%, -50%);
      }
    }
  }

  svg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: visible !important;

    image {
      width: 100%;
      height: inherit;
    }
  }

  > *:last-child {
    display: block;
  }

  > .last-child {
    display: block;
  }
}

@define-mixin alignmentAndScaling $name {
  picture.align-left- {
    &$name {
      > img,
      > svg {
        float: left;
        width: auto;
      }
    }
  }

  picture.align-right- {
    &$name {
      > img,
      > svg {
        float: right;
        width: auto;
      }
    }
  }

  picture.align-horizontal-center- {
    &$name {
      overflow: hidden;

      > img,
      > svg {
        position: relative;
        left: 50%;
        width: auto;
        height: 100%;
        transform: translateX(-50%);
      }
    }
  }

  picture.align-vertical-center- {
    &$name {
      overflow: hidden;

      > img,
      > svg {
        position: relative;
        top: 50%;
        width: 100%;
        height: auto;
        transform: translateY(-50%);
      }
    }
  }

  /* needs a height dimension from outerElement e.g. height: 50%; */
  picture.align-center- {
    &$name {
      overflow: hidden;

      > img,
      > svg {
        position: relative;
        top: 50%;
        left: 50%;
        width: auto;
        height: auto;
        min-height: 100%;
        transform: translate(-50%, -50%);
      }
    }
  }

  picture.scale- {
    &$name {
      width: 100%;
      margin-left: 0;

      > svg {
        width: 100%;
        height: 100%;
      }

      > img {
        float: none;
        width: 100%;
        height: auto;
        margin-left: 0;
      }
    }
  }
}

@define-mixin createRule $name {
  @mixin alignmentAndScaling $name;

  body::after {
    content: "$(name)" !important;
  }
}

@mixin createRule default;

@media (--screen-xs) {
  @mixin createRule xs;
}

@media (--screen-sm) {
  @mixin createRule sm;
}

@media (--screen-md) {
  @mixin createRule md;
}

@media (--screen-lg) {
  @mixin createRule lg;
}
